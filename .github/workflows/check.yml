name: CI - Checks

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/yarn-project-setup
      - name: Format check
        run: yarn run format
      - name: Create empty amplify_outputs.json to avoid errors
        run: echo '{}' > amplify_outputs.json
      - name: Lint
        run: yarn run lint

  angular-build:
    name: Angular build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/yarn-project-setup
      - name: Create empty amplify_outputs.json to avoid errors
        run: echo '{}' > amplify_outputs.json
      - name: Build angular
        run: yarn run build

  yarn-and-dependencies:
    name: Verify yarn and dependencies are set up correctly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/yarn-project-setup
      - name: Validate Yarn install does not contain errors
        run: |
          errors=$(yarn install --json | jq 'select(.displayName != "YN0000")')
          error_count=$(echo "$errors" | jq -s 'length')
          if [ "$error_count" -gt 0 ]; then
            echo "Detected Yarn install errors: $error_count"
            echo "$errors"
            exit 1
          fi
      - name: Check for duplicate dependencies
        run: yarn dedupe --check
      - name: Validate peer requirements are defined
        run: |
          reqs=$(yarn explain peer-requirements)
          echo "$reqs" | grep '✘' || true
          echo "$reqs" | grep -q '✘' && exit 1 || exit 0

  renovate-config-validator:
    name: Renovate config validator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Renovate config validation
        uses: suzuki-shunsuke/github-action-renovate-config-validator@v1.1.0

  validate-angular-json:
    name: Validate angular.json
    # Schema file is invalid and validating against it doesn't work
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/yarn-project-setup
      - name: Validate angular.json schema file exists
        run: |
          schemaFile=$(cat angular.json | jq -r '.["$schema"]')
          if [ ! -f "$schemaFile" ]; then
            echo "Schema file not found: $schemaFile"
            exit 1
          else
            echo "Schema file exists: $schemaFile"
          fi
